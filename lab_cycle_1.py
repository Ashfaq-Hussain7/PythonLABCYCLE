# -*- coding: utf-8 -*-
"""Lab_Cycle_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UYeya_WeCiJL0suB4OmLGdGFzygmMu89

1.Develop a program to read a four-digit number and find its
a. Sum of digits
b. Reverse
c. Difference between the product of digits at the odd position
and the product of digits at the even position.
"""

#function for sum of digits
def digit_sum(n):
  p=n
  s=0
  while p>0:
    s=s+p%10
    p=p//10
  return s
 
#function for reversing a number
def reverse(n):
  p=n
  s=0
  while p>0:
    s=s*10+p%10
    p=p//10
  return s

#function for difference between the product of digits at the odd position and the product of digits at the even postion
def difference(n):
  p=n
  x=1
  e=1
  o=1
  while p>0:
    i=p%10
    p=p//10 
    if x%2==0:
       o=o*i
    else:
       e=e*i
    x=x+1
    s=e-o
  return s

A=int(input("Enter a number: "))
sum=digit_sum(A)
reverse=reverse(A)
difference=difference(A)
print("\nThe Sum of the digits of the number = ",sum)
print("\nThe Reverse of the number = ",reverse)
print("\nThe Difference between product of digits of odd and even positions=",difference)

"""2.Develop a program to read the three sides of two triangles and 
calculate the area of both. Define a function to read the three sides 
and call it. Also, define a function to calculate the area. Print the total 
area enclosed by both triangles and each triangle's contribution (%) 
towards it.

"""

#read the sides of 2 triangles and finding area and the area percentage.
import math
def sides():
  x1=int(input("\n1Enter the first side of the triangle= "))
  y1=int(input("\nEnter the second side of the triangle= "))
  z1=int(input("\nEnter the third side of the triangle= "))
  return x1,y1,z1

def area(a,b,c):
  s=(a+b+c)/2
  area=(s*(s-a)*(s-b)*(s-c))**0.5
  return area

def per(tot,A1):
  per=(A1/tot)*100
  return per

si=sides()
a=area(si[0],si[1],si[2])
print("\n\nThe area of first triangle= ",a)

si=sides()
b=area(si[0],si[1],si[2])
print("\nThe area of second triangle= ",b)

print("\nTotal area of both triangle is ",a+b)
A=per(a+b,a)
print("\nThe contribution of first triangle is ", A)
B=per(a+b,b)
print("\nThe contribution of second triangle is ", B)

"""3.Develop a program to read the employee's name, code, and basic pay 
and calculate the gross salary, deduction, and net salary according to 
the following conditions. Define a function to find each of the 
components. Finally, generate a payslip.
"""

#generating payslip
def salary(bp,da,hra,ma):
  g=bp+da+hra+ma
  return g

def deduct(pt,pf,it):
  p=pt+pf+it
  return p

def n_salary(gs,d):
  ns=gs-d
  return ns


if pay<10000:
  da=(pay*5)/100
  hra=(pay*2.5)/100
  ma=500
  pt=20
  pf=(pay*8)/100
  it=0
elif pay>=10000 and pay<30000:
  da=(pay*7.5)/100
  hra=(pay*5)/100
  ma=2500
  pt=60
  pf=(pay*8)/100
  it=0
elif pay>=30000 and pay<50000:
  da=(pay*11)/100
  hra=(pay*7.5)/100
  ma=5000
  pt=60
  pf=(pay*11)/100
  it=11
else:
  da=(pay*25)/100
  hra=(pay*11)/100
  ma=7000
  pt=80
  pf=(pay*12)/100
  it=20

emp_name=str(input("Enter the employee name="))
code=int(input("Enter the employee code="))
pay=int(input("Enter the Pay="))


g_salary=salary(pay,da,hra,ma)
deduction=deduct(pt,pf,it)
net_salary=n_salary(g_salary,deduction)
print("\t___________payslip_________________")
print("\tEmployee Name=",emp_name)
print("\tEmployee Code=",code)
print("\tEmployee Basic Pay=",pay)
print("\tEmployee DA =",da)
print("\tEmployee HRA=",hra)
print("\tEmployee MA=",ma)
print("\tEmployee PT=",pt)
print("\tEmployee PF=",pf)
print("\tEmployee IT=",it)
print("\tEmployee Gross Salary=",g_salary)
print("\tEmployee Deduction=",deduction)
print("\tEmployee Net Salary=",net_salary)

"""4.Develop a program to perform the following task:
a. Define a function to check whether a number is happy or not.
b. Define a function to print all happy numbers within a range.
c. Define a function to print first N happy numbers.

"""

#happy number
def happy_or_not(x):
  for i in range(101):
    s=0
    while x>0:
      r=x%10
      s=s+(r*r)
      x=x//10
    if s==1:
      result=1
      break
    else:
      result=0
      x=s
  return result


def happy_nos(a,b):
  for i in range(a,b+1):
    x=happy_or_not(i)
    if x==1:
      print(i)

    
def first_n_happynos(x):
  num=int(input("Enter a number= "))
  result=happy_or_not(num)
  if result==1:
    print("The number is happy")
  elif result==0:
    print("The number is sad")

l_limit=int(input("Enter the lower limit= "))
u_limit=int(input("Enter the upper limit= "))
happy_nos(l_limit,u_limit)

n=int(input("Enter a number for generating n happy nos= "))
first_n_happynos(n)

"""5.Develop a program to read a string and perform the following 
operations:
• Print all possible substrings.
• Print all possible substrings of length K.
• Print all possible substrings of length K with N distinct 
characters.
• Print substring(s) of length maximum length with N distinct 
characters.
• Print all palindrome substrings.
"""

#to print substring.
def sub(a):
  for i in range(len(a)):
    for j in range(i+1,len(a)+1):
      print(a[i:j])


#to print subrtings of length K.
def sub_k(a):
  k=int(input("Enter the required length for subdtrings "))
  for i in range(len(a)-k+1):
    print(a[i:i+k])

a=str(input("Enter a string value "))
sub(a)
sub_k(a)